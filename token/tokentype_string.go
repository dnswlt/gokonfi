// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unspecified-0]
	_ = x[NilLiteral-1]
	_ = x[BoolLiteral-2]
	_ = x[IntLiteral-3]
	_ = x[DoubleLiteral-4]
	_ = x[StrLiteral-5]
	_ = x[FormatStrLiteral-6]
	_ = x[Plus-7]
	_ = x[Minus-8]
	_ = x[Times-9]
	_ = x[Div-10]
	_ = x[Modulo-11]
	_ = x[Equal-12]
	_ = x[NotEqual-13]
	_ = x[LessThan-14]
	_ = x[LessEq-15]
	_ = x[GreaterThan-16]
	_ = x[GreaterEq-17]
	_ = x[LogicalAnd-18]
	_ = x[LogicalOr-19]
	_ = x[BitwiseAnd-20]
	_ = x[BitwiseOr-21]
	_ = x[BitwiseXor-22]
	_ = x[ShiftLeft-23]
	_ = x[ShiftRight-24]
	_ = x[Dot-25]
	_ = x[Not-26]
	_ = x[Complement-27]
	_ = x[Merge-28]
	_ = x[Comma-29]
	_ = x[LeftParen-30]
	_ = x[RightParen-31]
	_ = x[LeftBrace-32]
	_ = x[RightBrace-33]
	_ = x[LeftSquare-34]
	_ = x[RightSquare-35]
	_ = x[Colon-36]
	_ = x[Ident-37]
	_ = x[Func-38]
	_ = x[Let-39]
	_ = x[Template-40]
	_ = x[If-41]
	_ = x[Then-42]
	_ = x[Else-43]
	_ = x[EndOfInput-44]
}

const _TokenType_name = "UnspecifiedNilLiteralBoolLiteralIntLiteralDoubleLiteralStrLiteralFormatStrLiteralPlusMinusTimesDivModuloEqualNotEqualLessThanLessEqGreaterThanGreaterEqLogicalAndLogicalOrBitwiseAndBitwiseOrBitwiseXorShiftLeftShiftRightDotNotComplementMergeCommaLeftParenRightParenLeftBraceRightBraceLeftSquareRightSquareColonIdentFuncLetTemplateIfThenElseEndOfInput"

var _TokenType_index = [...]uint16{0, 11, 21, 32, 42, 55, 65, 81, 85, 90, 95, 98, 104, 109, 117, 125, 131, 142, 151, 161, 170, 180, 189, 199, 208, 218, 221, 224, 234, 239, 244, 253, 263, 272, 282, 292, 303, 308, 313, 317, 320, 328, 330, 334, 338, 348}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
