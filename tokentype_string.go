// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package gokonfi

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unspecified-0]
	_ = x[IntLiteral-1]
	_ = x[DoubleLiteral-2]
	_ = x[StrLiteral-3]
	_ = x[PlusOp-4]
	_ = x[MinusOp-5]
	_ = x[TimesOp-6]
	_ = x[DivOp-7]
	_ = x[Equal-8]
	_ = x[NotEqual-9]
	_ = x[LessThan-10]
	_ = x[LessEq-11]
	_ = x[GreaterThan-12]
	_ = x[GreaterEq-13]
	_ = x[Comma-14]
	_ = x[Dot-15]
	_ = x[LeftParen-16]
	_ = x[RightParen-17]
	_ = x[LeftBrace-18]
	_ = x[RightBrace-19]
	_ = x[Colon-20]
	_ = x[EndOfInput-21]
}

const _TokenType_name = "UnspecifiedIntLiteralDoubleLiteralStrLiteralPlusOpMinusOpTimesOpDivOpEqualNotEqualLessThanLessEqGreaterThanGreaterEqCommaDotLeftParenRightParenLeftBraceRightBraceColonEndOfInput"

var _TokenType_index = [...]uint8{0, 11, 21, 34, 44, 50, 57, 64, 69, 74, 82, 90, 96, 107, 116, 121, 124, 133, 143, 152, 162, 167, 177}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
